package com.hengshuo.chengszj.action.backset;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;
import org.apache.struts2.ServletActionContext;
import org.apache.struts2.interceptor.RequestAware;

import com.baidu.a.a.a.c;
import com.baidu.lbsapi.auth.n;
import com.hengshuo.chengszj.action.BaseAction;
import com.hengshuo.chengszj.common.util.BaiduMap;
import com.hengshuo.chengszj.common.util.Define;
import com.hengshuo.chengszj.common.util.ExceptionUtil;
import com.hengshuo.chengszj.common.util.MessageHelper;
import com.hengshuo.chengszj.model.Backset;
import com.hengshuo.chengszj.model.User;
import com.hengshuo.chengszj.service.backset.BacksetService;
import com.hengshuo.chengszj.service.impl.backset.BacksetServiceI;
import com.hengshuo.chengszj.service.impl.user.UserServiceI;
import com.hengshuo.chengszj.service.user.UserService;


public class BacksetAction extends BaseAction implements RequestAware {
	
	private static final Logger log=Logger.getLogger(BacksetAction.class.getName());
	 private BacksetService backsetService;
	private UserService userService;
	public void setUserService(UserService userService) {
		this.userService = userService;
	}
	public void setBacksetService(BacksetService backsetService) {
		this.backsetService = backsetService;
	}
	 
	 /**
	  * 查询附近多少自由快递人
	  */
	 public String findNumber(){
		 try {
			 List<Backset> list=backsetService.findBacksetsByType(Define.BACKSET_TYPE_J);
			 Double juli;
			 if (list.size()>0) {
				 juli=Double.valueOf(list.get(0).getName());
				 if (juli<0) {
					 juli=5.0;	
				}
			}else {
				 juli=5.0;	
			}
			 
			 String[] latAndLon=weizhi.split(",");
			 Double lat2=Double.parseDouble(latAndLon[0]);
			 Double lon2=Double.parseDouble(latAndLon[1]);
			 List<User> users= userService.findUserByCity(new String(city.getBytes("iso8859-1"), "utf-8"));
			 int number=BaiduMap.getcount(lat2, lon2, users,juli);
			 
			 MessageHelper mh = new MessageHelper();
	 		 mh.setResult(Define.S);
	 		 mh.setMessage(String.valueOf(number+10));
	 		 setMessageHelper(mh);
	 		 
		} catch (Exception e) {
			 MessageHelper mh = new MessageHelper();
	 		 mh.setResult(Define.F);
	 		 mh.setMessage(Define.F_MESSAGE);
	 		 setMessageHelper(mh);
			log.error(ExceptionUtil.getStackMsg(e));
		}
		 return "OK";
	 }
	 
	 
	 /**
	  * 后台城市管理
	  */
	 public String cityManage(){
		 try {
			 List<Backset> list=backsetService.findBacksetsByType(Define.BACKSET_TYPE_C);
			 request.put("list", list);
		} catch (Exception e) {
			log.error(ExceptionUtil.getStackMsg(e));
		}
		 return "OK";
	 }
	 
	 /**
	  * 新增城市UI
	  */
	 public String addCityUI(){
		 try {
			 request.put("type", type);
		} catch (Exception e) {
			log.error(ExceptionUtil.getStackMsg(e));
		}
		 return type;
	 }
	 
	 /**
	  * 新增城市
	  */
	 public String addCity(){
		 try {
			 Backset backset=new Backset();
			 backset.setName(name);
			 backset.setType(type);
			 backsetService.save(backset);
		} catch (Exception e) {
			log.error(ExceptionUtil.getStackMsg(e));
		}
		 return "OK";
	 }
	 /*
	  * 修改城市
	  */
	 public String updateCity(){
		 try {
			 Backset backset=backsetService.get(id);
			 backset.setName(name);
			 backsetService.saveOrUpdate(backset);
			
			 return backset.getType();
			 
			 
		} catch (Exception e) {
			log.error(ExceptionUtil.getStackMsg(e));
		}
		 return "OK";
	 }
	 
	 
	 
	 /**
	  * 详情 
	  */
	 public String cityDetail(){
		 try {
		Backset	backset =backsetService.get(id);
		request.put("backset", backset);
		
			return backset.getType();
		
		} catch (Exception e) {
			log.error(ExceptionUtil.getStackMsg(e));
		}
		 return "OK";
	 }
	 
	 /**
	  * 图片列表
	  */
	 public String listImage(){
		 try {
			 List<Backset> list=backsetService.findBacksetsByType(Define.BACKSET_TYPE_M);
			 request.put("list", list);
		} catch (Exception e) {
			log.error(ExceptionUtil.getStackMsg(e));
		}
		 return "OK";
	 
	 }
	 
	 /**
		 * 修改头像
		 * @return
		 */
		public String updateimg(){
			try {
				
				Backset	backset =backsetService.get(id);
				backset.setIntro(intro);
				
				if(image!=null){
					 String root = ServletActionContext.getServletContext().getRealPath(Define.IMAGES_APPIMG);
				        FileOutputStream fos = null;
				        FileInputStream fis = null;
				        try {
				        	  // 建立文件上传流
				            fis = new FileInputStream(image);
				            // 建立文件输出流
				       
				            fos = new FileOutputStream(root + "/" +id+backset.getType()+".jpg");
				          
				            byte[] buffer = new byte[1024];
				            int len = 0;
				            while ((len = fis.read(buffer)) > 0) {
				                fos.write(buffer, 0, len);
				            }
				            HttpServletRequest request = ServletActionContext.getRequest(); 

					       // String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+ request.getContextPath()+"/images/news/"+ getImageFileName();
					        String imgurl=Define.IMAGES_APPIMG+"/"+id+backset.getType()+".jpg";
					        backset.setName(imgurl);
				        }
				        catch (Exception e) {
				        	 log.error("文件上传失败"+e.getMessage());
				        } 
				        
				        finally {
				        	fos.close();
				        	fis.close();
				        } 
				        
				     
					}

				backsetService.saveOrUpdate(backset);
				
			} catch (Exception e) {
				log.error(ExceptionUtil.getStackMsg(e));
			}
			return  "OK";
		}
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 /**
	  * 修改起步价 单价
	  */
	 public String updatePrice(){
		 try {
		Backset backset=backsetService.get(id);
		backset.setName(name);
		backsetService.saveOrUpdate(backset);
			
		} catch (Exception e) {
			log.error(ExceptionUtil.getStackMsg(e));
		}
		 return "OK";
	 }
	 
	 /**
	  * 后台价格
	  * 
	  */
	 public String backsetPrice(){
		try {
			List<Backset> listD=backsetService.findBacksetsByType(Define.BACKSET_TYPE_D);
			List<Backset> listQ=backsetService.findBacksetsByType(Define.BACKSET_TYPE_Q);
			request.put("listD", listD.get(0));
			request.put("listQ", listQ.get(0));
		} catch (Exception e) {
			log.error(ExceptionUtil.getStackMsg(e));
		}
		 return "OK";
	 }
	 
	 
	 /**
	  * 获取单价 起步价
	  */
	 
	 public String findPrice(){
		 try {
			List<String> listD=backsetService.findPrice(Define.BACKSET_TYPE_D);
				Double dPrice=Double.valueOf(listD.get(0));
			List<String> listQ=backsetService.findPrice(Define.BACKSET_TYPE_Q);
				Double qPrice=Double.valueOf(listQ.get(0));
				Count count=new Count();
				count.setDanjia(dPrice);
				count.setQibujia(qPrice);
				
				 MessageHelper mh = new MessageHelper();
		 		 mh.setResult(Define.S);
		 		 mh.setEntity(count);
		 		 setMessageHelper(mh);
		 } catch (Exception e) {
			 MessageHelper mh = new MessageHelper();
	 		 mh.setResult(Define.F);
	 		 mh.setMessage(Define.F_MESSAGE);
	 		 setMessageHelper(mh);
			log.error(ExceptionUtil.getStackMsg(e));
		}
		 return "OK";
	 }
	 
	 /**
	  * 附近距离
	  */
	 public String findJuli(){
		 try {
			 List<Backset> list=backsetService.findBacksetsByType(Define.BACKSET_TYPE_J);
				request.put("list", list.get(0));
		} catch (Exception e) {
			log.error(ExceptionUtil.getStackMsg(e));
		}
		 return "OK";
	 }
	 
	 
	 
	 /**
	  * 查询 快递公司列表
	  */
	 public String findExpress(){
		 try {
			List<Backset> list=backsetService.findBacksetsByType(type);
			 MessageHelper mh = new MessageHelper();
	 		 mh.setResult(Define.S);
	 		 mh.setList(list);
	 		 setMessageHelper(mh);
			 
		} catch (Exception e) {
			 MessageHelper mh = new MessageHelper();
	 		 mh.setResult(Define.F);
	 		 mh.setMessage(Define.F_MESSAGE);
	 		 setMessageHelper(mh);
			log.error(ExceptionUtil.getStackMsg(e));
		}
		 return "OK";
	 }
	 
	 private String intro;
	 public void setIntro(String intro) {
		this.intro = intro;
	}
	 private File image;
		private String imageContentType;
		private String imageFileName;
		public void setImage(File image) {
			this.image = image;
		}
		public void setImageContentType(String imageContentType) {
			this.imageContentType = imageContentType;
		}
		public void setImageFileName(String imageFileName) {
			this.imageFileName = imageFileName;
		}
	 private String weizhi;
	 public void setWeizhi(String weizhi) {
		this.weizhi = weizhi;
	}
	 private String city;
	 public void setCity(String city) {
		this.city = city;
	}
	 private Integer id;
	 public void setId(Integer id) {
		this.id = id;
	}
	 private String type;
	 public void setType(String type) {
		this.type = type;
	}
	 private String name;
	 public void setName(String name) {
		this.name = name;
	}
	 private MessageHelper messageHelper;
	 public MessageHelper getMessageHelper() {
		return messageHelper;
	}
	 public void setMessageHelper(MessageHelper messageHelper) {
		this.messageHelper = messageHelper;
	}
	 private Map<String,Object> request;
	@Override
	public void setRequest(Map arg0) {
		this.request=arg0;
	}
}
